#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 35    // 10
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/rgb.h>
#include <zephyr/dt-bindings/input/input-event-codes.h>

/ {
  zip_scroll_scaler: zip_scroll_scaler {
    compatible = "zmk,input-processor-scaler";
    #input-processor-cells = <2>;
    type = <INPUT_EV_REL>;
    codes = <INPUT_REL_WHEEL INPUT_REL_HWHEEL>;
    track-remainders;
  };
};

&mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
};

&msc_input_listener {
       input-processors = <&zip_scroll_scaler 2 1>;
};

&msc {
    acceleration-exponent = <0>;      // 0
    time-to-max-speed-ms = <0>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <400>;
    acceleration-exponent = <1>;
};


/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    behaviors {
        td_mt: tap_dance_mod_tap {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LSHIFT>, <&kp CAPSLOCK>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC     &kp N1     &kp N2        &kp N3        &kp N4  &kp N5       &kp UP_ARROW     &kp N6     &kp N7     &kp N8     &kp N9           &kp N0      &kp BACKSPACE
&kp TAB     &kp Q      &kp W         &kp E         &kp R   &kp T        &kp DOWN_ARROW   &kp Y      &kp U      &kp I      &kp O            &kp P       &kp BSLH
&td_mt      &kp A      &kp S         &kp D         &kp F   &kp G        &kp LEFT_ARROW   &kp H      &kp J      &kp K      &kp L            &kp SEMI    &kp APOS
&kp LCTRL   &kp Z      &kp X         &kp C         &kp V   &kp B        &kp RIGHT_ARROW  &kp N      &kp M      &kp COMMA  &kp DOT          &kp FSLH    &kp ENTER
&kp C_MUTE  &kp LCTRL  &kp LEFT_GUI  &kp LEFT_ALT  &mo 1   &kp SPACE    &kp ENTER        &kp SPACE  &kp ENTER  &mo 2      &kp RIGHT_SHIFT  &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "Default";
        };

        layer_1 {
            bindings = <
&kp GRAVE   &kp F1           &kp F2          &kp F3           &kp F4           &kp F5             &mmv MOVE_UP     &kp F6           &kp F7           &kp F8      &kp F9     &kp F10           &trans
&kp F11     &kp INSERT       &kp UP_ARROW    &trans           &kp HOME         &kp PAGE_UP        &mmv MOVE_DOWN   &kp N7           &kp N8           &kp N9      &trans     &kp MINUS         &kp EQUAL
&kp F12     &kp LEFT_ARROW   &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp END          &kp PAGE_DOWN      &mmv MOVE_LEFT   &kp N4           &kp N5           &kp N6      &trans     &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans      &trans           &trans          &trans           &trans           &trans             &mmv MOVE_RIGHT  &kp N1           &kp N2           &kp N3      &trans     &trans            &trans
&kp C_MUTE  &trans           &trans          &trans           &trans           &trans             &mkp LCLK        &kp N0           &trans           &mo 3       &trans     &trans
            >;

            display-name = "Arrows";
            sensor-bindings = <&inc_dec_kp PLUS MINUS>;
        };

        layer_2 {
            bindings = <
&kp TILDE  &trans        &trans          &trans        &trans        &trans          &mmv MOVE_UP     &trans    &kp C_PREV &kp C_PP    &kp C_NEXT &trans    &trans
&trans     &kp RA(Q)     &kp RA(W)       &kp RA(E)     &kp RA(R)     &kp RA(T)       &mmv MOVE_DOWN   &kp RA(Y) &kp RA(U)  &kp RA(I)   &kp RA(O)  &kp UNDER &kp PLUS
&trans     &kp RA(A)     &kp RA(S)       &kp RA(D)     &kp RA(F)     &kp RA(G)       &mmv MOVE_LEFT   &kp RA(H) &kp RA(J)  &kp RA(K)   &kp RA(L)  &kp LBRC  &kp RBRC
&trans     &kp RA(Z)     &kp RA(X)       &kp RA(C)     &kp RA(V)     &kp RA(B)       &mmv MOVE_RIGHT  &kp RA(N) &kp RA(M)  &trans      &trans     &trans    &trans
&trans     &trans        &trans          &trans        &mo 3         &trans          &mkp LCLK        &trans    &trans     &trans      &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
            display-name = "AltGr";
        };

        layer_3 {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1   &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans           &rgb_ug RGB_HUI &rgb_ug RGB_HUD  &trans           &trans           &trans           &trans
&trans  &bt BT_CLR    &bt BT_CLR_ALL &trans        &trans        &trans          &trans           &rgb_ug RGB_SAI &rgb_ug RGB_SAD  &trans           &trans           &trans           &trans
&trans  &out OUT_USB  &out OUT_BLE   &trans        &trans        &trans          &trans           &rgb_ug RGB_BRI &rgb_ug RGB_BRD  &trans           &trans           &rgb_ug RGB_SPD  &trans
&trans  &sys_reset    &trans         &bootloader   &trans        &trans          &trans           &rgb_ug RGB_OFF &rgb_ug RGB_ON   &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI  &trans
&trans  &trans        &trans         &trans        &trans        &trans          &trans           &trans          &trans           &trans           &trans           &trans
            >;

            display-name = "Third";
        };
    };
};
